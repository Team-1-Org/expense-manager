services:
  # MySQL Database
  db:
    image: mysql:9.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: expense_manager
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  # Node.js Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: node_backend
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: expense_manager
      NODE_ENV: production
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    environment:
      REACT_APP_BACKEND_URL: http://localhost:5000
      NODE_ENV: production
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "80:80"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
