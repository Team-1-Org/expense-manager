---
- name: Install and Start Docker on Ubuntu WSL
  hosts: localhost
  connection: local
  become: yes
  become_method: sudo

  tasks:
    - name: Ensure WSL version is 2
      shell: |
        if grep -q "WSL2" /proc/version; then
          echo "WSL2 detected"
        else
          echo "WSL2 is required for Docker to run."
          exit 1
        fi
      changed_when: false

    - name: Remove existing Docker installations
      apt:
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent

    - name: Remove Docker GPG keys
      shell: rm -f /usr/share/keyrings/docker-archive-keyring.gpg /etc/apt/keyrings/docker.gpg

    - name: Remove Docker repository files
      shell: rm -f /etc/apt/sources.list.d/docker.list

    - name: Update and clean apt cache
      shell: |
        apt-get update
        apt-get clean
        rm -rf /var/lib/apt/lists/*

    - name: Install prerequisites
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Create Docker GPG key directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download and add Docker GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Set up Docker repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        creates: /etc/apt/sources.list.d/docker.list

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Create Docker group
      group:
        name: docker
        state: present

    - name: Add current user to docker group
      user:
        name: "{{ lookup('env', 'USER') }}"
        groups: docker
        append: yes

    - name: Reset connection to apply group changes
      meta: reset_connection

    - name: Verify Docker is running
      command: docker info
      register: docker_info
      changed_when: false
      become: no

    - name: Display Docker info
      debug:
        var: docker_info.stdout_lines

    - name: Inform user about group changes
      debug:
        msg: "Docker installation complete. You may need to log out and log back in for group changes to take effect."

