---
- name: MySQL Database Backup from Docker Swarm
  hosts: app_vms
  become: yes
  vars:
    docker_service_name: db
    mysql_user: root
    mysql_database: expense_manager
    backup_dir: "{{ ansible_env.HOME }}/mysql_backups"
    backup_filename: "mysql_backup_{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}h{{ ansible_date_time.minute }}m.sql"
    cron_user: "{{ ansible_user_id }}"
    mysql_password_secret: mysql_root_password

  tasks:
    - name: Ensure backup directory exists
      file:
        path: "{{ backup_dir }}"
        state: directory
        mode: '0755'

    - name: Create cron job for weekly backup every Friday at 5 PM
      cron:
        name: "Weekly MySQL Backup"
        minute: "0"
        hour: "16"
        day: "*"
        month: "*"
        weekday: "5"
        job: >
          docker exec $(docker ps -q -f name={{ docker_service_name }} -f status=running) 
          sh -c 'MYSQL_PWD=$(cat /run/secrets/{{ mysql_password_secret }}) mysqldump -u{{ mysql_user }} {{ mysql_database }}' |
          gzip > {{ backup_dir }}/mysql_backup_`date +\%Y-\%m-\%d_\%Hh\%Mm\%Ss`.sql.gz

    - name: Perform immediate MySQL database backup
      shell: |
        docker exec $(docker ps -q -f name={{ docker_service_name }} -f status=running) sh -c '
        MYSQL_PWD=$(cat /run/secrets/{{ mysql_password_secret }}) mysqldump -u{{ mysql_user }} {{ mysql_database }}'
      register: mysql_backup
      ignore_errors: yes

    - name: Save backup to file
      copy:
        content: "{{ mysql_backup.stdout }}"
        dest: "{{ backup_dir }}/{{ backup_filename }}"
        mode: '0644'
      when: mysql_backup.stdout is defined

    - name: Compress backup file
      archive:
        path: "{{ backup_dir }}/{{ backup_filename }}"
        dest: "{{ backup_dir }}/{{ backup_filename }}.gz"
        format: gz
      when: mysql_backup.stdout is defined

    - name: Remove uncompressed backup file
      file:
        path: "{{ backup_dir }}/{{ backup_filename }}"
        state: absent
      when: mysql_backup.stdout is defined
